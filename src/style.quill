
mod terminal::style

ext fun enable_virt_esc() = "
    #ifdef _WIN32
        HANDLE out = GetStdHandle(STD_OUTPUT_HANDLE);
        DWORD mode;
        GetConsoleMode(out, &mode);
        mode |= ENABLE_VIRTUAL_TERMINAL_PROCESSING;
        SetConsoleMode(out, mode);
    #endif
"

val ENABLED_VIRT_ESC: Unit = enable_virt_esc()


val COLOR_DISABLED: Bool = os::env::get_var("NO_COLOR") |> is_some()


val SEQ_START: String = "\x1B["
val SEQ_END: String = "m"
val RESET_STYLE: String = "\x1B[m"

pub val BOLD: Int = 1
pub val ITALIC: Int = 3

pub val BLACK: Int = 30
pub val RED: Int = 31
pub val GREEN: Int = 32
pub val YELLOW: Int = 33
pub val BLUE: Int = 34
pub val MAGENTA: Int = 35
pub val CYAN: Int = 36
pub val WHITE: Int = 37

pub val BRIGHT_BLACK: Int = 90
pub val BRIGHT_RED: Int = 91
pub val BRIGHT_GREEN: Int = 92
pub val BRIGHT_YELLOW: Int = 93
pub val BRIGHT_BLUE: Int = 94
pub val BRIGHT_MAGENTA: Int = 95
pub val BRIGHT_CYAN: Int = 96
pub val BRIGHT_WHITE: Int = 97

pub val ON_BLACK: Int = 40
pub val ON_RED: Int = 41
pub val ON_GREEN: Int = 42
pub val ON_YELLOW: Int = 43
pub val ON_BLUE: Int = 44
pub val ON_MAGENTA: Int = 45
pub val ON_CYAN: Int = 46
pub val ON_WHITE: Int = 47

pub val ON_BRIGHT_BLACK: Int = 100
pub val ON_BRIGHT_RED: Int = 101
pub val ON_BRIGHT_GREEN: Int = 102
pub val ON_BRIGHT_YELLOW: Int = 103
pub val ON_BRIGHT_BLUE: Int = 104
pub val ON_BRIGHT_MAGENTA: Int = 105
pub val ON_BRIGHT_CYAN: Int = 106
pub val ON_BRIGHT_WHITE: Int = 107


pub fun style(text: String, ...s: List[Int]) -> String {
    if COLOR_DISABLED { return text }
    val seq_nums: String = s |> values() 
        |> map(Int::as_string) 
        |> join(";")
    return SEQ_START |> concat(seq_nums) |> concat(SEQ_END)
        |> concat(text)
        |> concat(RESET_STYLE)
}